;THIS PROGRAM TO IMPLEMENT A QUIZ GAME USING PIC16F877A

#INCLUDE<P16F877a.INC>
T_VAR EQU 50H           ;A TEMPERARY VARIABLE TO STORE THE DATA
LONG_DEL1 EQU 51H       ;TO GENERATE SOME LONG DELAY
LONG_DEL2 EQU 52H 
T_VARChar EQU 53H       ;TO SEND A CHARACTER TO LCD
INNER_DIGIT  EQU 54H    ;IN DELAY COMPUTING INNER LOOP
OUTER_DIGIT EQU 55H     ;IN DELAY COMPUTING OUTER LOOP
TEMP EQU 56H			;TO STORE DATA BEFORE BCD CONNVERTION



TEMP1 EQU 5CH
TEMP2 EQU 5DH
ANSWER EQU 5EH           ;TO STORE USER ANSWER         
MARKS EQU 5FH            ;TO STORE QUESTION MARKS


HUN EQU 60H               ;TO STORE BCD VALUES
TEN EQU 61H
ONE EQU 62H


Q0COUNT EQU 63H            ;TO STORE QUESTION REPETATION COUNTS       
Q1COUNT EQU 64H
Q2COUNT EQU 65H
Q3COUNT EQU 66H
Q4COUNT EQU 67H

P1SCORE EQU 68H           ;PLAYER 1 SCORE
P2SCORE EQU 69H           ;PLAYER 2 SCORE
COUNT_SEC EQU 6AH
BQCOUNT1 EQU 6BH          ;PLAYER 1 BONOUS Q COUNT
BQCOUNT2 EQU 6CH          ;PLAYER 1 BONOUS Q COUNT
RCOUNT EQU 6DH            ;REPETAION OF THE PLAYERS TURNS

;*********************INITILIZATION AT ORGIGIN 00H***************************
 	ORG 70H
	NOP
	GOTO MAIN
MAIN
    Banksel TRISA
    MOVLW 03H    ;PORTA ADC0 AND ADC1 ARE INPUT PINS
    MOVWF TRISA
    Clrf TRISB    ;PORTB AS OUTPUT PORT
	CLRF TRISC    ;PORTC AS OUTPUT PORT
    MOVLW 0xE4    ; ACCORDING TO SWITCHES AND LEDS
    MOVWF TRISD  
    Banksel PORTB    
    CLRF PORTB
	MOVLW 0XFF    ;CLEAR 7 SEGMENT DISPLY
	MOVWF PORTC
	CLRF PORTD
     

        
	
       
        
START_OF_CODE
	CALL LCD_INITILIZATION
	BCF PORTD,3 ;OFF LEDS
    BCF PORTD,4
	CLRF Q0COUNT  ;CLEAR ALL THE VARIABLES
	CLRF Q1COUNT
	CLRF Q2COUNT
	CLRF Q3COUNT
	CLRF Q4COUNT
	CLRF P1SCORE
	CLRF P2SCORE
	CLRF BQCOUNT1
	CLRF BQCOUNT2
	CLRF RCOUNT

	
	
    CALL WELCOME_GAME    ;TO DISPLAY WELCOME MESSAGE
    CALL LONG_DELAY      ;TO GENERATE LONG DELAY
    BTFSS PORTD,7        ;CHECK THE START BUTTON
	GOTO START_QUIZ
    GOTO START_OF_CODE
;********************QUIZ STARTED HERE*******************
START_QUIZ
BACK_AGAIN	
	CALL PLAYER1_TURN     ;PLAYER 1 TURN
    CALL PLAYER2_TURN     ;PLAYER 2 TURN
	INCF RCOUNT,1         ;INCREMENT TURN COUNT
    MOVLW .3
	SUBWF RCOUNT,0
    BTFSC STATUS,Z        ;IF BOTH PLAYERS GOT 3 QUESTIONS EACH PRINT SCORES AND RESULT
	GOTO RESULT
	GOTO BACK_AGAIN       ;ELSE GO BACK_AGAIN
RESULT	CALL PRINT_SCORES ;TO PRINT SCORES
	
 ;*************TO READ USER OPTION A OR B  OR C  
READ_OPTION
	MOVLW .9          ;TO LOAD THE TIMER COUNT 9
	MOVWF COUNT_SEC   ;TO DISPLAY THE VALUE ON 7 SEG DISPLAY
	MOVLW ' '         ;NOT AN OPTION
	MOVWF ANSWER
RBACK
	GOTO TIMER_SEC    ;PRINT ON 7 SEGMENT
BTIME
  	BTFSS PORTD,2  
    GOTO READO
	GOTO RBACK
READO
	BTFSS PORTD,5       ;CHECKS SUBMIT BUTTUN PRESSED OR NOT
    GOTO B1ZERO
B1_ONE            
    BTFSS PORTD,6
    GOTO B11B20
B1B211
	MOVLW 'C'    ;C OPTION OF  11 IS THE SWITCH POSITION
	MOVWF ANSWER
    GOTO EOPTION
B11B20
	MOVLW 'A'     ;A OPTION    01 IS THE SWITCH POSITION
	MOVWF ANSWER
    GOTO EOPTION

B1ZERO
	BTFSS PORTD,6        
    GOTO BOTHZEROS

B1B210
	MOVLW 'B'     ;B OPTION    10 IS THE SWITCH POSITION
	MOVWF ANSWER
    GOTO EOPTION
BOTHZEROS
	MOVLW ' '    ;NOT AN OPTION 00 IS SELECTED
	MOVWF ANSWER
EOPTION
    RETURN

;;***************THIS WILL DISPLAY THE 7 SEGMENT VALUES ***************

TIMER_SEC
	MOVF COUNT_SEC,W    
	CALL TABLE
 	MOVWF PORTC
    DECF COUNT_SEC,1
    CALL LONG_DELAY
	CALL LONG_DELAY
    MOVF COUNT_SEC
	SUBWF COUNT_SEC,0
    BTFSC STATUS,Z
	GOTO EOPTION
    GOTO BTIME
     
TABLE                           ;COMMON ANODE CODES
	ADDWF PCL ,1
	RETLW B'11000000' ;'0'
	RETLW B'11111001' ;'1'
	RETLW B'10100100' ;'2'
	RETLW B'10110000' ;'3'
	RETLW B'10011001' ;'4'
	RETLW B'10010010' ;'5'
	RETLW B'10000010' ;'6'
	RETLW B'11111000' ;'7'
	RETLW B'10000000' ;'8'
	RETLW B'10010000' ;'9'
	RETURN


;***********ANALOG DIGITAL CONVERTION DOING USING PORTA.0 
ADC0_CONV
	Banksel TRISA
    MOVLW 8EH ;A/D data right justified
    MOVWF ADCON0 ;only select RA0 as ADC PORT,the rest are data PORT
    Banksel PORTA ;BANK 0
    MOVLW 41H
    MOVWF ADCON0 ;select CLOCK is fosc/8,A/D enabled
    CALL DELAY
    BSF ADCON0,GO ;startup ADC divert
WAIT

    BTFSS PIR1,ADIF ;is the convert have finished?
    GOTO WAIT ;wait for the convert finished
    Bcf PIR1, ADIF ; Clear the A/D flag
    Banksel TRISA
    MOVF ADRESL,W ;read the result of convert
    Banksel PORTA
	
    MOVWF TEMP      ;STORE THE RESULT IN TEMP AND TEMP1
	MOVWF TEMP1    
	RETURN


;CHNGE TO BCD*******************************************************
CHANGE_To_BCD
		CLRF HUN
    	CLRF TEN
    	CLRF ONE
gen_HUNS
    MOVLW .100 ;sub 100,result keep in W
    SUBWF TEMP,0
    BTFSS STATUS,C ;judge if the result biger than 100
    GOTO gen_TENS ;no,get the ten bit result
    MOVWF TEMP ;yes,result keep in TEMP
    INCF HUN,1 ;hundred bit add 1
    GOTO gen_HUNS ;continue to get hundred bit result
gen_TENS
    MOVLW .10 ;sub 10,result keep in W
    SUBWF TEMP,0
    BTFSS STATUS,C ;judge if the result biger than 10
    GOTO gen_ONES;no,get the Entries bit result
    MOVWF TEMP ;yes,result keep in TEMP
    INCF TEN,1 ;ten bit add 1
    GOTO gen_TENS ;turn to continue get ten bit
gen_ONES
    MOVF TEMP,W
    MOVWF ONE ;the value of Entries bit
    RETURN






    


;***************TO WRITE COMMANDS ON LCD***************
WRITE_COMMAND_LCD
    MOVWF PORTB
    bcf PORTD, 0
    bsf PORTD, 1
    nop
    bcf PORTD, 1
    bcf PORTB, 1
    call delay
    return
;To send a character to LCD
WRITE_CHAR_LCD
    MOVWF PORTB
    bsf PORTD, 0
    bsf PORTD, 1
    nop
    bcf PORTD, 1
    bcf PORTD, 1
    call delay
    return
;*************ACTIVATE THE LCD MODULE 2 LINES AND CLEAR AND MOVE CURSOR TO RIGHT DIRECTION**************

LCD_INITILIZATION
    MOVLW 0x38 
    Call WRITE_COMMAND_LCD
    MOVLW 0x0e 
    Call WRITE_COMMAND_LCD
    MOVLW 0x01 
    Call WRITE_COMMAND_LCD
    MOVLW 0x06 
    Call WRITE_COMMAND_LCD
    return




;To generate small delay
delay
    MOVLW 0x02
    MOVWF OUTER_DIGIT
    clrf INNER_DIGIT
LOOP2
    decfsz INNER_DIGIT,f
    goto LOOP2
    decfsz OUTER_DIGIT,f
endLcd
    goto LOOP2
    return
;TO GENRATE SOME DELAY
DELAY
    MOVLW 0x02
    MOVWF T_VAR
L11  DECFSZ T_VAR,1
    GOTO L11
    RETURN



;;***********TO GENERAE SOME LONG DELAY***************
LONG_DELAY
    MOVLW .255
    MOVWF LONG_DEL1
LOOK2 MOVLW .255
    MOVWF LONG_DEL2
LOOK1 DECFSZ LONG_DEL2,1
    GOTO LOOK1
    DECFSZ LONG_DEL1,1
    GOTO LOOK2
    RETURN










;;*************TO PRINT WELCOME MESSAGE*******************
WELCOME_GAME            
    MOVLW 0X01
    Call WRITE_COMMAND_LCD
    MOVLW 0x80
    Call WRITE_COMMAND_LCD
    MOVLW 'W'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD


    MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD


    MOVLW 'L'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD


    MOVLW 'C'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
   	MOVLW 'O'
   	MOVWF T_VARChar
   	Call WRITE_CHAR_LCD
   	MOVLW 'M'
   	MOVWF T_VARChar
   	Call WRITE_CHAR_LCD
    MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'T'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'O'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'Q'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'U'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'I'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'Z'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD    

    MOVLW 0xC0
    Call WRITE_COMMAND_LCD
    
	MOVLW 'P'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'R'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'S'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    MOVLW 'S'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD

	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'S'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'T'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'A'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    MOVLW 'R'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    MOVLW 'T'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    RETURN   
	

;;;;;* TO  PRINT THAT QUESTIO IS ALREADY REPETED***************
REPATQUEST
	MOVLW 0X01
	Call WRITE_COMMAND_LCD
	MOVLW 0x80
    Call WRITE_COMMAND_LCD
    
	MOVLW 'T'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'H'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'I'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'S'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD

	MOVLW 'Q'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'R'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    MOVLW 'P'
	MOVWF T_VARChar
    Call WRITE_CHAR_LCD

	MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'T'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    MOVLW 'D'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	CALL LONG_DELAY
    CALL LONG_DELAY
    CALL LONG_DELAY
	RETURN

;;;;TO DISPLAY THAT IS WRONG ANSWER*******************

WRONG_ANSWER
	MOVLW 0X01
	Call WRITE_COMMAND_LCD
	MOVLW 0x80
    Call WRITE_COMMAND_LCD
    
	MOVLW 'W'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'R'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'O'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'N'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    MOVLW 'G'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD

	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'A'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'N'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'S'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    MOVLW 'W'
	MOVWF T_VARChar
    Call WRITE_CHAR_LCD

	MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'R'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '!'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD    
	CALL LONG_DELAY
    CALL LONG_DELAY
    CALL LONG_DELAY	
    RETURN

PLAYER1_TURN
	BSF PORTD,3
    BCF PORTD,4
    CALL SELECT_QUESTION
    RETURN
PLAYER2_TURN
	BSF PORTD,4
    BCF PORTD,3
    CALL SELECT_QUESTION
    RETURN
	
;;;*************TO SELECT THE QUESTION USING VARIABLE RESISTOR***********

SELECT_QUESTION
	MOVLW 0X01
    Call WRITE_COMMAND_LCD
    MOVLW 0X80
	Call WRITE_COMMAND_LCD
    MOVLW 'S'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW 'L'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'C'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'T'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'Q'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'U'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'S'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'T'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'I'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'O'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'N'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
XXX	MOVLW 0xC0
    Call WRITE_COMMAND_LCD
    CALL ADC0_CONV	 
    CALL CHANGE_To_BCD 
  
	MOVF HUN,W
	ADDLW 0X30
    Call WRITE_CHAR_LCD
	MOVF TEN,W
	ADDLW 0X30
    Call WRITE_CHAR_LCD
   	MOVF TEN,W
	ADDLW 0X30
    Call WRITE_CHAR_LCD
			
	BTFSS PORTD,2     ;IF SUBMIT NOT PRESSED GOTO XXX
    GOTO Q0_SEL
	GOTO XXX
    
			
Q0_SEL  	;;;RESISTOR VALUE 0-20
			MOVF TEMP1,W
			MOVWF TEMP2
			MOVLW .20
    		SUBWF TEMP2,0
    		BTFSC STATUS,C 
    		GOTO Q1_SEL 
            CALL QUESTION1
     		CALL READ_OPTION
			CALL LONG_DELAY
    		CALL LONG_DELAY
    		CALL LONG_DELAY			 
			CALL VAL_Q0_A 
			        
			
            GOTO AEND
			;;THE RESISTOR VALUE 20-40
Q1_SEL		MOVF TEMP1,W         
			MOVWF TEMP2
			MOVLW .40
    		SUBWF TEMP2,0
    		BTFSC STATUS,C 
    		GOTO Q2_SEL  
            CALL QUESTION2
     		CALL READ_OPTION
			CALL LONG_DELAY
    		CALL LONG_DELAY
    		CALL LONG_DELAY			 
			CALL VAL_Q1_A 			
            GOTO AEND
			;;THE RESISTOR VALUE 40----60
Q2_SEL		MOVF TEMP1,W
			MOVWF TEMP2
			MOVLW .60
    		SUBWF TEMP2,0
    		BTFSC STATUS,C 
    		GOTO Q3_SEL  
            CALL QUESTION3
     		CALL READ_OPTION
			CALL LONG_DELAY
    		CALL LONG_DELAY
    		CALL LONG_DELAY			 
			CALL VAL_Q2_A 		
            GOTO AEND

			;;THE RESISTOR VALUE 60-80
Q3_SEL		MOVF TEMP1,W
			MOVWF TEMP2
			MOVLW .80
    		SUBWF TEMP2,0
    		BTFSC STATUS,C 
    		GOTO Q4_SEL  
            CALL QUESTION4
     		CALL READ_OPTION
			CALL LONG_DELAY
    		CALL LONG_DELAY
    		CALL LONG_DELAY 
			CALL VAL_Q3_A 			
            GOTO AEND
			;;THE RESISTOR VALUE 80-100
Q4_SEL 
			CALL BQUESTION
     		CALL READ_OPTION
			CALL LONG_DELAY
    		CALL LONG_DELAY
    		CALL LONG_DELAY			 
			CALL VAL_Q4_A 

		
AEND        
    		RETURN
    
    	
    
;;;;;;;;;;;;THIS IS FIRST QUESTION:::::::::::::::::::
QUESTION1
	MOVLW .0 
    SUBWF Q0COUNT,0
	BTFSC STATUS,Z 
	GOTO NEXT1
    CALL REPATQUEST
    GOTO SELECT_QUESTION
NEXT1   INCF Q0COUNT,1 
	MOVLW 0X01
    Call WRITE_COMMAND_LCD
    MOVLW 0X80
	Call WRITE_COMMAND_LCD
    MOVLW 'A'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW '+'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '5'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '1'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '2'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '>'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'A'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '?'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    
    MOVLW 0XC0
	Call WRITE_COMMAND_LCD
    MOVLW 'a'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '8'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'b'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '7'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD


    MOVLW 'c'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '5'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	CALL LONG_DELAY
    CALL LONG_DELAY
    CALL LONG_DELAY
	RETURN
VAL_Q0_A
	
	CALL YOUROPTION
	MOVLW 'B'               ;B IS THE ANSWER FOR QUESTION 0 
    SUBWF ANSWER,0
	BTFSS STATUS,Z 
	GOTO ANEXT0
    MOVLW .10
	MOVWF MARKS
    CALL CORRECT_ANSWER
    RETURN
ANEXT0
	CALL WRONG_ANSWER
    RETURN





;*************************QUESTION2*********************
QUESTION2
	MOVLW .0 
    SUBWF Q1COUNT,0
	BTFSC STATUS,Z 
	GOTO NEXT2
    CALL REPATQUEST
    GOTO SELECT_QUESTION
NEXT2   INCF Q1COUNT,1 
	MOVLW 0X01
    Call WRITE_COMMAND_LCD
    MOVLW 0X80
	Call WRITE_COMMAND_LCD
    MOVLW 'X'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW '+'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '9'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '1'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '5'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '>'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'X'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '?'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    
    MOVLW 0XC0
	Call WRITE_COMMAND_LCD
    MOVLW 'a'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '6'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'b'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '2'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD


    MOVLW 'c'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '3'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	CALL LONG_DELAY
    CALL LONG_DELAY
    CALL LONG_DELAY
	RETURN
VAL_Q1_A
	
	CALL YOUROPTION
	MOVLW 'A'               ;A IS THE ANSWER FOR QUESTION 1 
    SUBWF ANSWER,0
	BTFSS STATUS,Z 
	GOTO ANEXT1
    MOVLW .10
	MOVWF MARKS
    CALL CORRECT_ANSWER
    RETURN
ANEXT1
	CALL WRONG_ANSWER
    RETURN




;***********************QUESTION3***********************
QUESTION3
	MOVLW .0 
    SUBWF Q2COUNT,0
	BTFSC STATUS,Z 
	GOTO NEXT3
    CALL REPATQUEST
    GOTO SELECT_QUESTION
NEXT3   INCF Q2COUNT,1 
	MOVLW 0X01
    Call WRITE_COMMAND_LCD
    MOVLW 0X80
	Call WRITE_COMMAND_LCD
    MOVLW 'X'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW '+'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '2'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '1'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '1'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '>'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'X'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '?'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    
    MOVLW 0XC0
	Call WRITE_COMMAND_LCD
    MOVLW 'a'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '6'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'b'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '2'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD


    MOVLW 'c'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '9'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	RETURN
VAL_Q2_A
	
	CALL YOUROPTION
	MOVLW 'C'               ;C IS THE ANSWER FOR QUESTION 2 
    SUBWF ANSWER,0
	BTFSS STATUS,Z 
	GOTO ANEXT2
    MOVLW .10
	MOVWF MARKS
    CALL CORRECT_ANSWER
    RETURN
ANEXT2
	CALL WRONG_ANSWER
    RETURN



;**********************QUESTION4*******************
QUESTION4
	MOVLW .0 
    SUBWF Q3COUNT,0
	BTFSC STATUS,Z 
	GOTO NEXT4
    CALL REPATQUEST
    GOTO SELECT_QUESTION
NEXT4   INCF Q3COUNT,1 
	MOVLW 0X01
    Call WRITE_COMMAND_LCD
    MOVLW 0X80
	Call WRITE_COMMAND_LCD
    MOVLW 'X'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW '+'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '9'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '1'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '8'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '>'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'X'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '?'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    
    MOVLW 0XC0
	Call WRITE_COMMAND_LCD
    MOVLW 'a'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '9'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'b'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '2'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD


    MOVLW 'c'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '3'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
	RETURN
VAL_Q3_A
	
	CALL YOUROPTION
	MOVLW 'A'               ;A IS THE ANSWER FOR QUESTION 3 
    SUBWF ANSWER,0
	BTFSS STATUS,Z 
	GOTO ANEXT3
    MOVLW .10
	MOVWF MARKS
    CALL CORRECT_ANSWER
    RETURN
ANEXT3
	CALL WRONG_ANSWER
    RETURN





;**********************BOUNOUS QUESTION EVERY ONE CAN GET ONE CHANCE*******************
BQUESTION
	BTFSS PORTD,3
	GOTO P2BQ
	MOVLW .0 
    SUBWF BQCOUNT1,0
	BTFSC STATUS,Z 
	GOTO NEXT5
    CALL REPATQUEST
    GOTO SELECT_QUESTION
P2BQ
	MOVLW .0 
    SUBWF BQCOUNT2,0
	BTFSC STATUS,Z 
	GOTO NEXT6
    CALL REPATQUEST
    GOTO SELECT_QUESTION
NEXT6
	INCF BQCOUNT2,1
    GOTO NOM
	
NEXT5   INCF BQCOUNT1,1 
NOM
	MOVLW 0X01
    Call WRITE_COMMAND_LCD
    MOVLW 0X80
	Call WRITE_COMMAND_LCD
    MOVLW '5'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW '+'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '2'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '='
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '?'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW 0XC0
	Call WRITE_COMMAND_LCD
    MOVLW 'a'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '7'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'b'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '2'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD


    MOVLW 'c'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW ')'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW '3'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
	RETURN
VAL_Q4_A
	
	CALL YOUROPTION
	MOVLW 'A'               ;A IS THE ANSWER FOR BONOUS 
    SUBWF ANSWER,0
	BTFSS STATUS,Z 
	GOTO ANEXT4
    MOVLW .8                ;SOME RANDOM NUMBER
	MOVWF MARKS
    CALL CORRECT_ANSWER
    RETURN
ANEXT4
	CALL WRONG_ANSWER
    RETURN



;;;;TO PRINT THE USER ANSWER OPTION********************
YOUROPTION
	
	MOVLW 0XFF
	MOVWF PORTC
	MOVLW 0X01
    Call WRITE_COMMAND_LCD
    MOVLW 0X80
	Call WRITE_COMMAND_LCD
    MOVLW 'Y'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW 'O'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW 'U'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'R'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'O'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'P'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'T'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'I'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'O'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'N'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ':'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
    MOVF ANSWER,W
    Call WRITE_CHAR_LCD
    CALL LONG_DELAY
    CALL LONG_DELAY
    CALL LONG_DELAY
	RETURN 
    
 ;;to PRINT THE THE GIVEN OPTION IS CORRENCT ANSWER****************   
CORRECT_ANSWER
    MOVLW 0XC0
	Call WRITE_COMMAND_LCD
    MOVLW 'C'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW 'O'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW 'R'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'R'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'C'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'T'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'A'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'N'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'S'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'W'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'E'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'R'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW '!'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD

    BTFSS PORTD,3
    GOTO PLAYER2
PLAYER1
	MOVF MARKS,W
	ADDWF P1SCORE,0
	MOVWF P1SCORE
	CALL LONG_DELAY
    CALL LONG_DELAY
    CALL LONG_DELAY
    RETURN
PLAYER2
	MOVF MARKS,W
	ADDWF P2SCORE,0
	MOVWF P2SCORE 
	CALL LONG_DELAY
    CALL LONG_DELAY
    CALL LONG_DELAY  
	RETURN  
;;;*****************TO PRINT SCORES***********************
PRINT_SCORES
	MOVLW 0X01
    Call WRITE_COMMAND_LCD
    MOVLW 0X80
	Call WRITE_COMMAND_LCD
    MOVLW 'P'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW '1'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ':'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVF P1SCORE,W
	MOVWF TEMP
	CALL CHANGE_To_BCD
	MOVF TEN,W
	ADDLW 0X30
	Call WRITE_CHAR_LCD
	MOVF ONE,W
	ADDLW 0X30
	Call WRITE_CHAR_LCD

    MOVLW 0XC0
	Call WRITE_COMMAND_LCD
    MOVLW 'P'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW '2'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW ' '
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW ':'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVF P2SCORE,W
	MOVWF TEMP
	CALL CHANGE_To_BCD
	MOVF TEN,W
	ADDLW 0X30
	Call WRITE_CHAR_LCD
	MOVF ONE,W
	ADDLW 0X30
	Call WRITE_CHAR_LCD
	CALL LONG_DELAY
    CALL LONG_DELAY
    CALL LONG_DELAY
	
	MOVF P1SCORE,W
	SUBWF P2SCORE,0
	BTFSC STATUS,C
	GOTO P2WIN
	MOVLW 0X01
    Call WRITE_COMMAND_LCD    ;TO P1 OWN
    MOVLW 0X80
	Call WRITE_COMMAND_LCD
    MOVLW 'P'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW '1'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW 'O'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'W'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'N'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	GOTO ENDCODE
P2WIN
	MOVLW 0X01
    Call WRITE_COMMAND_LCD
    MOVLW 0X80
	Call WRITE_COMMAND_LCD             ;TO P2 OWN
    MOVLW 'P'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	
    MOVLW '2'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD 
	MOVLW 'O'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'W'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
	MOVLW 'N'
    MOVWF T_VARChar
    Call WRITE_CHAR_LCD
     

	
             ;END OF THE CODE
ENDCODE
HERE GOTO HERE
    END












